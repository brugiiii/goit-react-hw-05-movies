{"version":3,"file":"static/js/622.25e4c2ce.chunk.js","mappings":"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","sources":["Api.js","components/AdditionalInfo/AdditionalInfo.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '83584156b00a2d23d72a1dbc78073946';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport class Api {\n  constructor() {\n    this._query = '';\n    this._movieId = null;\n  }\n\n  async fetch(type) {\n    let res;\n\n    switch (type) {\n      case 'trending':\n        res = await axios(\n          `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n        );\n        break;\n\n      case 'byQuery':\n        res = await axios(\n          `${BASE_URL}search/movie?api_key=${KEY}&query=${this._query}&include_adult=false&language=en-US&page=1`\n        );\n        break;\n\n      case 'details':\n        res = await axios(\n          `${BASE_URL}movie/${this._movieId}?api_key=${KEY}&language=en-US`\n        );\n        return res.data;\n\n      case 'credits':\n        res = await axios(\n          `${BASE_URL}movie/${this._movieId}/credits?api_key=${KEY}&language=en-US`\n        );\n        return res.data.cast;\n\n      case 'reviews':\n        res = await axios(\n          `${BASE_URL}movie/${this._movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n        );\n        break;\n\n      default:\n        return;\n    }\n\n    return res.data.results;\n  }\n\n  get query() {\n    return this._query;\n  }\n\n  set query(newQuery) {\n    this._query = newQuery;\n  }\n\n  get movieId() {\n    return this._movieId;\n  }\n\n  set movieId(id) {\n    this._movieId = id;\n  }\n}\n","import { Link } from 'react-router-dom';\n\nconst AdditionalInfo = () => {\n  return (\n    <>\n      <hr />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr />\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import styled from '@emotion/styled';\n\nexport const MovieInfoEl = styled.div`\n  width: 700px;\n`;\n","import { MovieInfoEl } from './MovieInfo.styled';\n\nconst MovieInfo = ({ year, title, overview, genres, score }) => {\n  return (\n    <MovieInfoEl>\n      <h2>\n        {title} ({year})\n      </h2>\n      <p>User Score: {score}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres}</p>\n    </MovieInfoEl>\n  );\n};\n\nexport default MovieInfo;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsEl = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  heigth: 450px;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin: 15px 0;\n  display: block;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n","import { useEffect, useState, Suspense, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport AdditionalInfo from '../../components/AdditionalInfo';\nimport MovieInfo from '../../components/MovieInfo';\nimport { Api } from '../../Api';\n\nimport {\n  MovieDetailsEl,\n  Img,\n  StyledLink,\n  MainInfo,\n} from './MovieDetails.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_POSTER_URL =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst api = new Api();\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({\n    poster_path: '',\n    title: '',\n    release_date: '',\n    overview: '',\n    vote_average: 0,\n    genres: [],\n  });\n  const [showLoader, setShowLoader] = useState(true);\n\n  const { movieId } = useParams();\n\n  const { current } = useRef(useLocation());\n  const backLinkHref = current.state?.from ?? `/movies`;\n\n  useEffect(() => {\n    setShowLoader(true);\n\n    api.movieId = movieId;\n    api.fetch('details').then(setMovie).finally(setShowLoader(false));\n  }, [movieId]);\n\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movie;\n\n  const imgUrl = poster_path ? BASE_IMG_URL + poster_path : DEFAULT_POSTER_URL;\n  const year = release_date.slice(0, 4);\n  const parsedGenres = genres.map(genre => genre.name).join(', ');\n  const score = String(vote_average).slice(0, 3).replace('.', '');\n\n  return (\n    <>\n      <MovieDetailsEl>\n        <StyledLink to={backLinkHref}>Go back</StyledLink>\n\n        {showLoader ? (\n          <ThreeDots\n            color=\"#e75480\"\n            wrapperStyle={{ justifyContent: 'start' }}\n          />\n        ) : (\n          <>\n            <MainInfo>\n              <Img src={imgUrl} alt={title} />\n\n              <MovieInfo\n                year={year}\n                title={title}\n                overview={overview}\n                genres={parsedGenres}\n                score={score}\n              />\n            </MainInfo>\n\n            <AdditionalInfo />\n\n            <Suspense\n              fallback={\n                <ThreeDots\n                  color=\"#e75480\"\n                  wrapperStyle={{ justifyContent: 'start' }}\n                />\n              }\n            >\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </MovieDetailsEl>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","BASE_URL","Api","this","_query","_movieId","type","axios","res","data","cast","results","newQuery","id","to","MovieInfoEl","styled","year","title","overview","genres","score","MovieDetailsEl","Img","StyledLink","Link","MainInfo","api","useState","poster_path","release_date","vote_average","movie","setMovie","showLoader","setShowLoader","movieId","useParams","backLinkHref","useRef","useLocation","current","state","from","useEffect","fetch","then","finally","imgUrl","slice","parsedGenres","map","genre","name","join","String","replace","color","wrapperStyle","justifyContent","src","alt","Suspense","fallback"],"sourceRoot":""}